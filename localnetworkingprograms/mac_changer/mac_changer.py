#!/usr/bin/env python
from termcolor import colored
import subprocess
import random
import re

def change_mac_address(interface, new_mac):
    subprocess.call(["ifconfig", interface, "down"])
    subprocess.call(["ifconfig", interface, "hw", "ether", new_mac])
    subprocess.call(["ifconfig", interface, "up"])

def generate_random_mac_address():
    mac = [random.randint(0x00, 0xff) for _ in range(6)]
    mac_address = ':'.join(map(lambda x: '%02x' % x, mac))
    return mac_address

def main():
    interface_output = subprocess.check_output(["ifconfig"]).decode("utf-8")

    # Check for ETH0 interface
    eth0_mac_address = re.search(r"ether ([\da-fA-F]{2}(?::[\da-fA-F]{2}){5})", interface_output)
    if eth0_mac_address:
        print("ETH0 Interface MAC Address is:", colored(eth0_mac_address.group(1), "red"))
    else:
        print("MAC Address not found for ETH0 interface.")

    # Check for WLAN0 interface
    wlan0_mac_address = re.search(r"wlan0 ([\da-fA-F]{2}(?::[\da-fA-F]{2}){5})", interface_output)
    if wlan0_mac_address:
        print("WLAN0 Interface MAC Address is:", colored(wlan0_mac_address.group(1), "red"))

    random_mac = generate_random_mac_address()
    print("Example Random MAC Address:", colored(random_mac, "yellow"))

    interface = input("[*] Enter Interface To change Mac Address On: ")
    new_mac_address = input("[*] Enter Mac Address To Change To: ")

    before_mac_address = subprocess.check_output(["ifconfig", interface])

    change_mac_address(interface, new_mac_address)

    after_change_mac_address = subprocess.check_output(["ifconfig", interface])

    if before_mac_address == after_change_mac_address:
        print(colored("[!!] Failed To Change MAC Address To: " + new_mac_address, "red"))
    else:
        print(colored("[+] MAC Address Changed To: " + new_mac_address + " On Interface " + interface, "green"))

try:
    main()
except KeyboardInterrupt:
    exit()